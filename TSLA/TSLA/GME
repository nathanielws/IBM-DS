#Project 1
import yfinance as yf
import pandas as pd
import warnings #ignore all warnings
warnings.filterwarnings("ignore", category=FutureWarning)
import plotly.graph_objects as go
from plotly.subplots import make_subplots


#question one
tesla = yf.Ticker('TSLA')
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data.rename(columns={'Date': 'Date'}, inplace=True)
print(tesla_data.head(5))

#question two
from bs4 import BeautifulSoup
import requests

tesla_url = "https://en.wikipedia.org/wiki/Tesla,_Inc.#Finances"
tesla_list = pd.read_html(tesla_url, match="Year", flavor="bs4")[0]
tesla_revenue = tesla_list[['Year', 'Revenue(US$ m)']]
tesla_revenue.dropna(inplace=True)
tesla_revenue.rename(columns={'Year': 'Date', 'Revenue(US$ m)': 'Revenue'}, inplace=True)
tesla_revenue['Date'] = pd.to_datetime(tesla_revenue['Date'].astype(str) + '-01-01')
print(tesla_revenue.tail(5))

#question three
gme = yf.Ticker('GME')
gme_data = gme.history(period="max")
gme_data.reset_index(inplace=True)
print(gme_data.head(5))

#question four
gme_url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
gme_list = pd.read_html(gme_url, flavor="bs4")
gme_tables = len(gme_list)
gme_revenue = gme_list[0]
gme_revenue.dropna(inplace=True)
gme_revenue.rename(columns={'GameStop Annual Revenue(Millions of US $)': 'Date', 'GameStop Annual Revenue(Millions of US $).1': 'Revenue'}, inplace=True)
gme_revenue['Revenue'] = gme_revenue['Revenue'].replace('[\$,]', '', regex=True).astype(float)
gme_revenue['Date'] = pd.to_datetime(gme_revenue['Date'].astype(str) + '-01-01')
print(gme_revenue.tail(5))

#question five
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data['Date'] <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific['Date'], infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

make_graph(gme_data, gme_revenue, "GameStop")
